name: ci

on:
  push:
    branches:
      - 'master'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            deadgrudge/lifesaver
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}



#INITIAL ATTEMPT
# name: golang-pipeline
# on: push
# jobs:
#   # test:
#   #   runs-on: ubuntu-latest
#   #   if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #     - name: Run Unit Tests
#   #       run: go test

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     if: startsWith(github.ref, 'refs/tags')
#     steps:
#       - name: Extract Version
#         id: version_step
#         run: |
#           echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
#           echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
#           echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"
#       - name: Print Version
#         run: |
#           echo ${{steps.version_step.outputs.version_tag}}
#           echo ${{steps.version_step.outputs.latest_tag}}
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: PrepareReg Names
#         id: read-docker-image-identifiers
#         run: |
#           echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
#           echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           push: true
#           tags: |
#             ${{env.VERSION_TAG}}
#             ${{env.LASTEST_TAG}}
#           build-args: |
#             ${{steps.version_step.outputs.version}}


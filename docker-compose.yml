version: "3.9"
services:
  app:
    container_name: application
    build:
      dockerfile: Dockerfile
      context: .
      target: final
    volumes:
      - app:/lifesaver
  postgresdb:
    image: postgres:latest
    container_name: databasse
    volumes:
      - database_postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME} 
      POSTGRES_USER: ${DB_USER} 
      POSTGRES_PASSWORD: ${DB_PASSWORD}

volumes:
  app:
  database_postgres:

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge




















# INITIAL ATTEMPT

# version: '3'
# services:
#   app:
#     container_name: full_app
#     build: .
#     ports: 
#       - 8080:8080 
#     restart: on-failure
#     volumes:
#       - api:/usr/src/app/
#     depends_on:
#       - fullstack-postgres
#     networks:
#       - fullstack

#   fullstack-postgres:
#     image: postgres:latest
#     restart: always
#     container_name: full_db_postgres
#     environment:
#       - POSTGRES_USER=${DB_USER}  
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_DB=${DB_NAME}
#       - DATABASE_HOST=${DB_HOST} 
#     ports:
#       - '5432:5432'
#     volumes:
#       - database_postgres:/var/lib/postgresql/data
#     networks:
#       - fullstack

# volumes:
#   api:
#   database_postgres:

# # Networks to be created to facilitate communication between containers
# networks:
#   fullstack:
#     driver: bridge









